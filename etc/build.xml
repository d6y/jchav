<?xml version="1.0" encoding="UTF-8"?>

<project name="jchav" default="default" basedir=".">

	<target name="default" depends="run-checkstyle,compile-junit,run-junit,build-jar"/>
	
	<target name="cruise-target" depends="default" />
	
	<target name="init">
		<echo>Loading properties from ${user.name}.properties</echo>
		<property file="${user.name}.properties" />


		<property name="build.src.dir" value="../src" />
		<property name="build.docs.dir" value="../docs" />
		<property name="build.classes.dir" value="../classes"/>
		<property name="debug.flag" value="true" />

		<property name="test.dir" value="../junit" />
		<property name="junit.log.location" value="${test.dir}/logs" />
		<property name="test.src.dir" value="${test.dir}" />
		
		<property name="test.classes.dir" value="${test.dir}/classes" />

		<property name="target.jarfile" value="../jchav.jar" />

		
		<property name="findbugs.home" value="./findbugs" />
		<property name="findbugs.output" value="${build.docs.dir}/findbugs" />

		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />


		<path id="fullclasspath">
			<fileset dir="../libs/">
				<include name="**/*.jar"/>
			</fileset>
		</path>
		
		<path id="test.classpath">
			<fileset dir="./thirdparty/junit/">
				<include name="**/*.jar"/>
			</fileset>
			<fileset dir="../libs/">
				<include name="**/*.jar"/>
			</fileset>
			<pathelement location="${build.classes.dir}" />
			<pathelement location="${test.classes.dir}" />
		</path>

	</target>

	<target name="compile" depends="init">
		<!--  create the dirs for output -->
		<javac debug="${debug.flag}" srcdir="${build.src.dir}" classpathref="fullclasspath" includes="**" destdir="${build.classes.dir}" />

	</target>


	<target name="compile-junit" depends="init,compile">
		<!--  create the dirs for output -->
		<javac debug="${debug.flag}" srcdir="${test.src.dir}" classpathref="fullclasspath" classpath="${build.classes.dir}" includes="**" destdir="${test.classes.dir}" />

	</target>

	<target name="run-junit" depends="compile-junit">
		<mkdir dir="${junit.log.location}"/>
	
		<junit fork="yes" printsummary="on" haltonfailure="yes" >
			<jvmarg value="-Djchav.test.data.dir=../testdata"/>
			
			<classpath location="${test.classes.dir}"/>
			<classpath location="${build.classes.dir}" />
			<classpath refid="fullclasspath"/>
			
			<formatter type="xml" />
			<batchtest  todir="${junit.log.location}" haltonfailure="yes">
				<fileset dir="${test.classes.dir}">
					<!-- This is our main pattern... -->
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

			
	<target name="build-jar" depends="clean,compile">
		<jar destfile="${target.jarfile}">
			<fileset dir="${build.classes.dir}" />
		</jar>
	</target>

	<target name="clean" depends="init">

		<delete>
			<fileset dir="${build.classes.dir}" />
			<fileset dir="${test.classes.dir}" />
		</delete>

	</target>
	
	<target name="run-checkstyle" depends="init">
		
		<taskdef name="checkstyle" classname="com.puppycrawl.tools.checkstyle.CheckStyleTask">
			<classpath>
		    	<pathelement location="./thirdparty/checkstyle/checkstyle-all-4.1.jar" />
		    </classpath> 
		</taskdef>
		         					
		<checkstyle config="./checkstyle.xml" failonviolation="true" classpathref="fullclasspath">
			<formatter type="xml" toFile="checkstyle_results.xml"/>
			<fileset dir="${build.src.dir}" />
		</checkstyle>
	</target>
	 

	<target name="generate-javadoc" depends="init">
			<mkdir dir="${build.docs.dir}/javadoc" />
			<javadoc classpath="${javac.classpath}" 
				additionalparam="-J-Djava.awt.headless=true"
				classpathref="fullclasspath" 
				packagenames="com.*" 
				destdir="${build.docs.dir}/javadoc" 
				maxmemory="256M"
				author="true"
				version="true"
				>
				<sourcepath>
					<pathelement path="${build.src.dir}" />
				</sourcepath>
		</javadoc>
	</target>
	
</project>

